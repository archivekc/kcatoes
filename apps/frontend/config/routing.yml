# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

homepage:
  url:   /
  param: { module: editorial, action: homepage }


# ######### 
# PAGES WEB
# #########
pageIndex:
  url:      /pages
  param:    { module: page, action: index }

pageDetail:
  url:      /page/voir/:id
  param:    { module: page, action: detail }
  class:    sfDoctrineRoute
  options:  { model: WebPage, type: object }
  requirements: 
    id:     \d+

pageEdit:
  url:      /page/modifier/:id
  param:    { module: page, action: edit }
  class:    sfDoctrineRoute
  options:  { model: WebPage, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

pageDelete:
  url:      /page/supprimer/:id
  param:    { module: page, action: delete }
  class:    sfDoctrineRoute
  options:  { model: WebPage, type: object }
  requirements: 
    id:     \d+

pageExecuteTests:
  url:      /page/tests/execute/:id
  param:    { module: page, action: executeTests }
  class:    sfDoctrineRoute
  options:  { model: WebPageExtract, type: object }
  requirements: 
    id:     \d+
    
pageResultatTestsRiche:
  url:      /page/tests/resultat/riche/:id
  param:    { module: page, action: resultatTestsRiche }
  class:    sfDoctrineRoute
  options:  { model: WebPageExtract, type: object }
  requirements: 
    id:     \d+
    
pageResultatTests:
  url:      /page/tests/resultat/:id
  param:    { module: page, action: resultatTests }
  class:    sfDoctrineRoute
  options:  { model: WebPageExtract, type: object }
  requirements: 
    id:     \d+
        
pageTests:
  url:      /page/tests/:id
  param:    { module: page, action: tests }
  class:    sfDoctrineRoute
  options:  { model: WebPage, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

pageSource:
  url:      /page/source/:id
  param:    { module: page, action: source }
  class:    sfDoctrineRoute
  options:  { model: WebPageExtract, type: object }
  requirements: 
    id:     \d+

pageExtracts:
  url: /assistant-extraction/:id
  param:    { module: page, action: extractWizard }
  class:    sfDoctrineRoute
  options:  { model: WebPage, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

pageExtractSrc:
  url: /assistant-extraction/source/:id
  param:    { module: page, action: extractSrc }
  class:    sfDoctrineRoute
  options:  { model: WebPageExtract, type: object }
  requirements:
    id: \d+
    sf_method: [GET]
  
 
webPageDeleteConfigTest: 
  url:     /web-page/:web_page_id/delete-config-test/:test_config_id
  param:   { module: ihm, action: WebPageDeleteConfigTest }
  class:   sfDoctrineRoute
  options: { model: Assoc_WebPage_TestConfig, type: object }
  requirements: 
    web_page_id: \d+
    test_config_id: \d+ 
    sf_method: [GET]
  
deleteWebPage:
  url: /delete-web-page/:id
  param: {module: ihm, action: DeleteWebPage}

# ########
# SCENARIO
# ########
scenarioIndex:
  url:      /scenarii
  param:    { module: scenario, action: index }

scenarioDetail:
  url:      /scenario/voir/:id
  param:    { module: scenario, action: detail }
  class:    sfDoctrineRoute
  options:  { model: Scenario, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

scenarioEdit:
  url:      /scenario/modifier/:id
  param:    { module: scenario, action: edit }
  class:    sfDoctrineRoute
  options:  { model: Scenario, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

scenarioDelete:
  url:      /scenario/supprimer/:id
  param:    { module: scenario, action: delete }
  class:    sfDoctrineRoute
  options:  { model: Scenario, type: object }
  requirements: 
    id:     \d+

scenarioPageEdit:
  url:      /scenario/modifier-page/:id
  param:    { module: scenario, action: pageEdit }
  class:    sfDoctrineRoute
  options:  { model: ScenarioPage, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

scenarioPageDelete:
  url:      /scenario/supprimer-page/:id
  param:    { module: scenario, action: pageDelete }
  class:    sfDoctrineRoute
  options:  { model: ScenarioPage, type: object }
  requirements: 
    id:     \d+


# #################
# PAGES EDITORIALES
# #################
aide:
  url:  /aide
  param: { module: editorial, action: aide }

credits:
  url: /credits
  param: {module: editorial, action: credits}

# #############
# CONFIGURATION
# #############
testConfig:
  url: /test-config/:id
  param: {module: ihm, action: TestConfig}

deleteTestConfig:
  url: /delete-test-config/:id
  param: {module: ihm, action: DeleteTestConfig}

editTestConfig:
  url: /edit-test-config/:id
  param: {module: ihm, action: EditTestConfig}

  
# #########
# TESTS
# #########
launchTests:
  url: /launch-tests/:web_page_id/:test_config_id
  param: {module: ihm, action: LaunchTests }
  class:   sfDoctrineRoute
  options: { model: Assoc_WebPage_TestConfig, type: object }
  requirements: 
    web_page_id: \d+
    test_config_id: \d+
    sf_method: [GET]   
    
# generic rules
# please, remove them by adding more specific rules
default_index:
  url:   /:module
  param: { action: index }

default:
  url:   /:module/:action/*
