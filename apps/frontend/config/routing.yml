# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

homepage:
  url:   /
  param: { module: scenario, action: index }

# ################
# AUTHENTIFICATION
# ################

sf_guard_signin:
  url:   /login
  param: { module: sfGuardAuth, action: signin }

sf_guard_signout:
  url:   /logout
  param: { module: sfGuardAuth, action: signout }

sf_guard_password:
  url:   /request_password
  param: { module: sfGuardAuth, action: password }

# ##########################
# ADMINISTRATION UTILISATEUR
# ##########################
connexion:
  url: /connexion
  param: { module: sfGuardAuth, action: signin}

sf_guard_user:
  url: /administration/utilisateurs
  param: {module: sfGuardUser, action: index}

sf_guard_group:
  url: /administration/profils
  param: {module: sfGuardGroup, action: index}

sf_guard_group_assoc_test:
  url: /administration/profils/tests/:id
  param: {module: sfGuardGroup, action: assocTest}
  class:    sfDoctrineRoute
  options:  { model: sfGuardGroup, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

sf_guard_permission:
  url: /administration/roles
  param: {module: sfGuardPermission, action: index }
  
userTest:
  url: /mon-profil/tests/
  param: {module: sfGuardUser, action: userTest }

# ######### 
# PAGES WEB
# #########
pageIndex:
  url:      /pages
  param:    { module: page, action: index }

pageDetail:
  url:      /page/voir/:id
  param:    { module: page, action: detail }
  class:    sfDoctrineRoute
  options:  { model: WebPage, type: object }
  requirements: 
    id:     \d+

pageEdit:
  url:      /page/modifier/:id
  param:    { module: page, action: edit }
  class:    sfDoctrineRoute
  options:  { model: WebPage, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

pageDelete:
  url:      /page/supprimer/:id
  param:    { module: page, action: delete }
  class:    sfDoctrineRoute
  options:  { model: WebPage, type: object }
  requirements: 
    id:     \d+

pageExecuteTests:
  url:      /page/tests/execute/:id
  param:    { module: page, action: executeTests }
  class:    sfDoctrineRoute
  options:  { model: WebPageExtract, type: object }
  requirements: 
    id:     \d+
    
pageTests:
  url:      /page/tests/:id
  param:    { module: page, action: tests }
  class:    sfDoctrineRoute
  options:  { model: WebPage, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

pageSource:
  url:      /page/source/:id
  param:    { module: page, action: source }
  class:    sfDoctrineRoute
  options:  { model: WebPageExtract, type: object }
  requirements: 
    id:     \d+

pageExtracts:
  url: /assistant-extraction/:id
  param:    { module: page, action: extractWizard }
  class:    sfDoctrineRoute
  options:  { model: WebPage, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

pageExtractSrc:
  url: /assistant-extraction/source/:id
  param:    { module: page, action: extractSrc }
  class:    sfDoctrineRoute
  options:  { model: WebPageExtract, type: object }
  requirements:
    id: \d+
    sf_method: [GET]

# ##########
# EVALUATION
# ##########
pageResultatTestsRiche:
  url:      /page/tests/resultat/riche/:id
  param:    { module: eval, action: resultatTestsRiche }
  class:    sfDoctrineRoute
  options:  { model: WebPageExtract, type: object }
  requirements: 
    id:     \d+
    
sauvegardeResultat:
  url:      /page/tests/resultat/save/:id
  param:    { module: eval, action: sauvegardeResultat }
  class:    sfDoctrineRoute
  options:  { model: WebPageExtract, type: object }
  requirements: 
    id:     \d+
    sf_method: [POST]
    
pageResultatTests:
  url:      /page/tests/resultat/:id
  param:    { module: eval, action: resultatTests }
  class:    sfDoctrineRoute
  options:  { model: WebPageExtract, type: object }
  requirements: 
    id:     \d+

# ########
# SCENARIO
# ########
scenarioIndex:
  url:      /scenarios
  param:    { module: scenario, action: index }

scenarioTemplateIndex:
  url:      /modeles-de-scenarios
  param:    { module: scenario, action: templateIndex }

scenarioTemplateDelete:
  url:      /scenario/supprimer-modele-de-scenario/:id
  param:    { module: scenario, action: templateDelete }
  class:    sfDoctrineRoute
  options:  { model: ScenarioTemplate, type: object }
  requirements: 
    id:     \d+

scenarioDetail:
  url:      /scenario/voir/:id
  param:    { module: scenario, action: detail }
  class:    sfDoctrineRoute
  options:  { model: Scenario, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

scenarioAvancement:
  url:      /scenario/avancement/:id
  param:    { module: scenario, action: avancement }
  class:    sfDoctrineRoute
  options:  { model: Scenario, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET]

scenarioEdit:
  url:      /scenario/modifier/:id
  param:    { module: scenario, action: edit }
  class:    sfDoctrineRoute
  options:  { model: Scenario, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

scenarioDelete:
  url:      /scenario/supprimer/:id
  param:    { module: scenario, action: delete }
  class:    sfDoctrineRoute
  options:  { model: Scenario, type: object }
  requirements: 
    id:     \d+

scenarioPageEdit:
  url:      /scenario/modifier-page/:id
  param:    { module: scenario, action: pageEdit }
  class:    sfDoctrineRoute
  options:  { model: ScenarioPage, type: object }
  requirements: 
    id:     \d+
    sf_method: [GET, POST]

scenarioPageDelete:
  url:      /scenario/supprimer-page/:id
  param:    { module: scenario, action: pageDelete }
  class:    sfDoctrineRoute
  options:  { model: ScenarioPage, type: object }
  requirements: 
    id:     \d+

scenarioActions:
  url:      /scenario/action/:id
  param:    { module: scenario, action: actions }
  class:    sfDoctrineRoute
  options:  { model: Scenario, type: object }
  requirements: 
    id:     \d+
    sf_method: [POST]

# ######################
# RESULTATS (Génériques)
# ######################

resultatScenario:
  url:      /rapport/scenario/:id/:mode
  param:    { module: rapport, action: rapportScenario }
  class:    sfDoctrineRoute
  options:  { model: Scenario, type: object }
  requirements:
    id:     \d+
    mode:   \w+
    sf_method: [GET, POST]


# #################
# PAGES EDITORIALES
# #################
editorial:
  url: /documentation
  param: { module: editorial, action: index }
overview:
  url: /vue-d-ensemble
  param: { module: editorial, action: overview }

aide:
  url:  /aide
  param: { module: editorial, action: aide }

credits:
  url: /credits
  param: {module: editorial, action: credits}

environnementR:
  url: /environnement-recommande
  param: {module: editorial, action: environnementR}

about:
  url: /a-propos
  param: {module: editorial, action: about}
    
# generic rules
# please, remove them by adding more specific rules
default_index:
  url:   /:module
  param: { action: index }

default:
  url:   /:module/:action/*


