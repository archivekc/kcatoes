#
# Options de Doctrine
# 
# @date 27/01/2012
# @author Cyril FABBY
# 
detect_relations: false
options: 
  charset: utf8
  collate: utf8_unicode_ci
attributes: 
  export: all
  validate: true 


# =WebPage
# une page est défini par son url et eventuellement une description
WebPage:
  tableName: web_page
  actAs:
    - Timestampable
  columns:
    id:          { type: integer, primary: true, autoincrement: true }
    url:         { type: varchar(5000), notnull: true, unique: true }
    doctype:     { type: varchar(500), notnull: false }
    description: { type: varchar(5000), notnull: false }
     
  
# =Test
# liste des tests associés à une page
Test:
  tableName: test
  columns:
    id:             { type: integer, primary: true, autoincrement: true }
    web_page_id:    { type: integer, notnull: true }
    class:          { type: varchar(500) }
  relations: 
    WebPage: 
      local:        web_page_id
      foreign:      id
      foreignAlias: CollectionTests
      onDelete:     CASCADE

# =ProfilTest
# liste des tests associés à un profil
ProfilTest:
  tableName: profil_test
  columns:
    id:             { type: integer, primary: true, autoincrement: true }
    profil_id:    { type: integer, notnull: true }
    class:          { type: varchar(500) }
  relations: 
    sfGuardGroup: 
      local:        profil_id
      foreign:      id
      foreignAlias: CollectionTests
      onDelete:     CASCADE


# =WebPageExtract
# Différentes extractions d'une url (avec/sans JS, avec/sans CSS, avec/sans images) 
WebPageExtract:
  tableName: web_page_extract
  actAs:
    - Timestampable
  columns:
    id:             { type: integer, primary: true, autoincrement: true }
    web_page_id:    { type: integer, notnull: true }
    src:            { type: clob, notnull: true }
    type:           { type: varchar(500), notnull: true }
  relations:
    WebPage:
      local:        web_page_id
      foreign:      id
      foreignAlias: CollectionExtracts
      onDelete:     CASCADE
      
# =TestResult
# Résultat des tests passés sur les différentes extractions
TestResult:
  tableName: test_result
  columns:
    id:                     { type: integer, primary: true, autoincrement: true }
    web_page_extract_id:    { type: integer, notnull: true }
    num_categorie:          { type: integer, notnull: true } # 1er  numéro du test
    num_test:               { type: integer, notnull: true } # 2eme numéro du test
    class:                  { type: varchar(500) }
    result:                 { type: integer, notnull: true }    
  relations:
    WebPageExtract:
      local:        web_page_extract_id
      foreign:      id
      foreignAlias: CollectionResults
      onDelete:     CASCADE 

# =TestResultLine
# Une ligne de résultat (constituant du resultat global)
TestResultLine:
  tableName: test_result_line
  columns:
    id:                     { type: integer, primary: true, autoincrement: true }
    test_result_id:         { type: integer, notnull: true }
    result:                 { type: integer, notnull: true }   
    comment:                { type: varchar(500) }
    xpath:                  { type: varchar(500) }
    css_selector:           { type: varchar(500) }
    annotation:             { type: varchar(500) }
    source:                 { type: clob }
    prettySource:           { type: clob }
    text_content:           { type: clob }
  relations:
    TestResult:
      local: test_result_id
      foreign: id
      foreignAlias: CollectionLines
      onDelete:     CASCADE
      
# =TestConfig
# une configuration
TestConfig:
  tableName: test_config
  actAs:
    - Timestampable
  columns:
    id:          { type: integer, primary: true, autoincrement: true }
    libelle:     { type: varchar(255), unique: true }
    description: { type: varchar(5000) }
    
# =TestConfigDetail
# les différents tests d'une conf 
TestConfigDetail:
  tableName: test_config_detail
  actAs:
    - Timestampable
  columns:
    id:             { type: integer, primary: true, autoincrement: true }
    test_config_id: { type: integer, notnull: true }
    class:          { type: varchar(500) }
  relations:
    TestConfig:
      local:        test_config_id
      foreign:      id
      foreignAlias: CollectionTests

      
# =Scenario
# Un scenario est défini par un nom auquel on associe une liste de page
Scenario:
  tableName: scenario
  actAs:
    - Timestampable
  columns:
    id:          { type: integer, primary: true, autoincrement: true }
    nom:         { type: varchar(500), notnull: true }
      
      
# =ScenarioPage
# Liste pages associées à un scenario
ScenarioPage:
  tableName: scenario_page
  actAs:
    - Timestampable
  columns:
    id:          { type: integer, primary: true, autoincrement: true }
    nom:        { type: varchar(500), notnull: true }
    scenario_id: { type: integer, notnull: false }
    web_page_id: { type: integer, notnull: false }
    required:    { type: boolean, default: false }
  relations: 
    Scenario:
      local:        scenario_id
      foreign:      id
      foreignAlias: ScenarioPages
      onDelete:     CASCADE
    WebPage:
      local:        web_page_id
      foreign:      id
      foreignAlias: ScenarioPages
      onDelete:     CASCADE

# =ScenarioTemplate
# Un template de scenario
ScenarioTemplate:
  tableName: scenario_template
  actAs:
    - TimeStampable
  columns:
    id:          { type: integer, primary: true, autoincrement: true }
    nom:        { type: varchar(500), notnull: true }

# =ScenarioTemplatePage
# Un template de scenario
ScenarioTemplatePage:
  tableName: scenario_template_page
  actAs:
    - Timestampable
  columns:
    id:          { type: integer, primary: true, autoincrement: true }
    scenario_template_id: { type: integer, primary: true, autoincrement: true }
    nom:        { type: varchar(500), notnull: true }
    required:    { type: boolean, default: false }
  relations: 
    ScenarioTemplate: 
      local:        scenario_template_id
      foreign:      id
      foreignAlias: CollectionPages
      onDelete:     CASCADE

# =UserTest
# Liste des tests associés à l'utilisateur (pour visualisation)
UserTest:
  tableName: user_test
  columns:
    id:             { type: integer, primary: true, autoincrement: true }
    user_id:        { type: integer, primary: true, autoincrement: true }
    class:          { type: varchar(500) }
  relations:
    sfGuardUser:
      local: user_id
      foreign: id
      foreignAlias: CollectionTests
      onDelete: CASCADE