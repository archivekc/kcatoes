<?php

/**
 * sfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    kcatoes
 * @subpackage model
 * @author     Key Consulting
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class sfGuardUser extends PluginsfGuardUser
{
	/**
	 * Récupère les tests associés aux profils de l'utilisateur
	 */
	public function getProfilTest()
	{
    $testAndProfils = array();
	  
	  $groupNames = $this->getGroupNames();
	  
	  if ($groupNames)
	  {
      $profilTest = Doctrine_Query::create()
        ->select('pt.class, p.name')
        ->from('ProfilTest pt')
        ->innerJoin('pt.sfGuardGroup p')
        ->whereIn('p.name', $this->getGroupNames())
        ->execute();
      
      foreach ($profilTest as $test){
  	    if (!isset($testAndProfils[$test->getClass()]))
  	    {
  	      $testAndProfils[$test->getClass()] = array();
  	    }
  	    array_push($testAndProfils[$test->getClass()], $test->getSfGuardGroup()->getName());
      }
	  }
    return $testAndProfils;
      
	}
	
	/**
	 * Récupère les test associés spécifiquement à l'utilisateur
	 */
	public function getUserTest()
	{
		$tests = $this->getCollectionTests();
		$userTest = array();
		foreach($tests as $test){
			array_push($userTest, $test->getClass());
		};
		
		return $userTest;
	}
	
	public function getProfilAndUserTest()
	{
		$profil = array_keys($this->getProfilTest());
		$user = $this->getUserTest();
		
		return array_merge($user, $profil);
	}
	
	/**
	 * Retourne tous les tests accessibles par l'utilisateur, sous forme de hash.
	 * Les clés sont les classes de test
	 * @return array
	 */
	public function getAllAvailableTests()
	{
	  // Tests associés aux profils de l'utilisateur
	  $allTests = $this->getProfilTest();
	  
    // Tests associés associés spécifiquement à l'utilisateur
	  $userTests = $this->getCollectionTests();
    foreach($userTests as $test){
      $class = $test->getClass();
      if (!isset($allTests[$class]))
      {
        $allTests[$class] = 'user';
      }
    };
	  
    return $allTests;
	}
	
	
	
}
